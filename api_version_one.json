{
  "info": { "title": "API", "version": "v1" },
  "openapi": "3.1.0",
  "components": {
    "securitySchemes": { "Bearer": { "type": "http", "scheme": "bearer" } },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/v1/content/md-example/:name": {
      "get": {
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Return markdown string of example CV for some cool person",
            "content": { "text/plain": { "schema": {} } }
          }
        }
      }
    },
    "/v1/content/md-example": {
      "get": {
        "responses": {
          "200": {
            "description": "Return list of example CVs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "examples": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "md_str": { "type": "string" }
                        },
                        "required": ["name", "md_str"]
                      }
                    }
                  },
                  "required": ["examples"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/sign-in": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": { "type": "string" },
                  "code": { "type": "string" },
                  "auth_provider": { "type": "string", "enum": ["google"] }
                },
                "required": ["client_id", "code", "auth_provider"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success user upsert (auto sign-in/up) return fresh jwt token pair.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": { "type": "string" },
                    "refresh_token": { "type": "string" },
                    "token_type": { "type": "string", "enum": ["Bearer"] },
                    "_id": { "type": "integer" },
                    "email": { "type": "string", "format": "email" },
                    "name": { "type": "string" },
                    "nik": { "type": "string", "minLength": 3, "maxLength": 32 }
                  },
                  "required": [
                    "access_token",
                    "refresh_token",
                    "token_type",
                    "_id",
                    "email"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "pattern": "Bearer \\S+"
                  }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": { "type": "string" },
                    "refresh_token": { "type": "string" },
                    "token_type": { "type": "string", "enum": ["Bearer"] },
                    "_id": { "type": "integer" },
                    "email": { "type": "string", "format": "email" },
                    "name": { "type": "string" },
                    "nik": { "type": "string", "minLength": 3, "maxLength": 32 }
                  },
                  "required": [
                    "access_token",
                    "refresh_token",
                    "token_type",
                    "_id",
                    "email"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "responses": { "204": { "description": "Success logout (no content)" } }
      }
    },
    "/v1/mdcv": {
      "post": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "md": { "type": "string" },
                  "html": { "type": "string" },
                  "is_published": { "type": "boolean" },
                  "name": { "type": "string" },
                  "make_default": { "type": "boolean" }
                },
                "required": ["md", "html", "is_published", "make_default"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CV created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "_id": { "type": "number" } },
                  "required": ["_id"]
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "All CVs for owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": { "type": "number" },
                          "md": { "type": "string" },
                          "html": { "type": "string" },
                          "is_published": { "type": "boolean" },
                          "name": { "type": "string" },
                          "as_default_by_user_id": { "type": "number" },
                          "as_default_by_username": { "type": "string" },
                          "as_regulary_by_name_username": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "_id": { "type": "number" }
                        },
                        "required": [
                          "user_id",
                          "md",
                          "html",
                          "is_published",
                          "_id"
                        ]
                      }
                    }
                  },
                  "required": ["items"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/mdcv/:mdcv_id": {
      "put": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "number", "nullable": true },
            "required": false,
            "name": "mdcv_id",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "md": { "type": "string" },
                  "html": { "type": "string" },
                  "is_published": { "type": "boolean" },
                  "name": { "type": "string" },
                  "make_default": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CV updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "data": {
                      "anyOf": [
                        { "nullable": true },
                        { "type": "string" },
                        { "nullable": true }
                      ]
                    }
                  },
                  "required": ["ok", "data"]
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "number", "nullable": true },
            "required": false,
            "name": "mdcv_id",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "CV for owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": { "type": "number" },
                    "md": { "type": "string" },
                    "html": { "type": "string" },
                    "is_published": { "type": "boolean" },
                    "name": { "type": "string" },
                    "as_default_by_user_id": { "type": "number" },
                    "as_default_by_username": { "type": "string" },
                    "as_regulary_by_name_username": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "_id": { "type": "number" }
                  },
                  "required": ["user_id", "md", "html", "is_published", "_id"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "number", "nullable": true },
            "required": false,
            "name": "mdcv_id",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "responses": { "204": { "description": "CV deleted (no content)" } }
      }
    },
    "/v1/users/nik": {
      "post": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nik": { "type": "string", "pattern": "[\\w_-]{3,32}" }
                },
                "required": ["nik"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added nik to user to extend his possibilities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "data": {
                      "anyOf": [
                        { "nullable": true },
                        { "type": "string" },
                        { "nullable": true }
                      ]
                    }
                  },
                  "required": ["ok", "data"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/nik/:nik": {
      "put": {
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "schema": { "type": "string", "pattern": "[\\w_-]{3,32}" },
            "required": true,
            "name": "nik",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated nik for user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "data": {
                      "anyOf": [
                        { "nullable": true },
                        { "type": "string" },
                        { "nullable": true }
                      ]
                    }
                  },
                  "required": ["ok", "data"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/hello-world": {
      "get": {
        "responses": {
          "200": {
            "description": "Text response when \"Accept\" is not specified as \"json\"",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "201": {
            "description": "When \"Accept: application/json\" is sent, it returns a JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    }
  }
}
